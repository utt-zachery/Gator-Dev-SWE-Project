

<h1 style="text-align: center; margin-top: 10px; padding-bottom: 10px;">Donate Food Item</h1>
<br/>
<!DOCTYPE html>
<html>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet">
<style>

#regForm {
  background-color: #ffffff;
  font-family: Raleway;
  width: 70%;
  min-width: 300px;
  display: inline-block;
}


input {
  padding: 10px;
  width: 100%;
  font-size: 17px;
  font-family: Raleway;
  border: 1px solid #aaaaaa;
}

/* Mark input boxes that gets an error on validation: */
input.invalid {
  background-color: #ffdddd;
}

/* Hide all steps by default: */
.tab {
  display: none;
}

button {
  background-color: #007bff;
  color: #ffffff;
  border: none;
  padding: 10px 20px;
  font-size: 17px;
  font-family: Raleway;
  cursor: pointer;
}

button:hover {
  opacity: 0.8;
}

#prevBtn {
  background-color: #bbbbbb;
}

/* Make circles that indicate the steps of the form: */
.step {
  height: 15px;
  width: 15px;
  margin: 0 2px;
  background-color: #bbbbbb;
  border: none;  
  border-radius: 50%;
  display: inline-block;
  opacity: 0.5;
}

.step.active {
  opacity: 1;
}

/* Mark the steps that are finished and valid: */
.step.finish {
  background-color: #007bff;
}

.undoneBtn {
    border: 2px solid #007bff;
    width: 70px;
    height: 70px;
    border-radius: 50%;
    display: inline-block;
    position: relative; right:50px;
    top:25px;
    color:  #007bff;
}

.doneBtn {
    border: 2px solid white;
    width: 70px;
    height: 70px;
    border-radius: 50%;
    display: inline-block;
    position: relative; right:50px;
    top:25px;
    background-color: #007bff;
    color:  white;
}
</style>

<div style="text-align: center">
<form id="regForm" action="/action_page.php">
  
  <!-- One "tab" for each step in the form: -->
  <div class="tab" style="text-align: center; "> <div name="doBtn" class="undoneBtn"><span style="font-size: 35px; position: absolute; top:3px;left:26px;">1</span></div> <h1 style="display: inline-block; position: relative; right:30px;">Food Item Barcode</h1><br/><br/>
    <p><div class="custom-file mb-3" style="border-radius: 0px; ">
        <input type="file" class="custom-file-input" id="customFile" name="filename"  style="border-radius: 0px; " onchange="validateButton()">
        <label class="custom-file-label text-left" for="customFile" id="fileLabel"  style="border-radius: 0px; ">Choose file</label>
      </div></p><div style="text-align: center">
        <span><div style="border-top: 1px solid gray; width: 20%; display: inline-block; margin-right: 15px; margin-bottom:5px;"></div>OR<div style="margin-bottom:5px;margin-left: 15px; border-top: 1px solid gray; width: 20%; display: inline-block"></div></span>
    </div><br/>
    <p><input  onkeyup="validateButton()" placeholder="Food Barcode Number" style="height: 40px;" oninput="this.className = ''" name="lname"></p>
  </div>
  <div class="tab" style="text-align: center; "> <div name="doBtn" class="undoneBtn"><span style="font-size: 35px; position: absolute; top:5px;left:24px;">2</span></div> <h1 style="display: inline-block; position: relative; right:30px;">Food Item Expiration Date</h1><br/><br/>
  <br/>
    <p><input type="date" onchange="validateButton2()" placeholder="Expiration Date" style="height: 40px;" oninput="this.className = ''" id="expirationChooser"></p>
  </div>
  
  <div class="tab" style="text-align: center; "> <div name="doBtn" class="undoneBtn"><span style="font-size: 35px; position: absolute; top:3px;left:24px;">3</span></div> <h1 style="display: inline-block; position: relative; right:30px;">Food Item Quantity</h1><br/><br/>
  <br/>
    <p><input type="number" min="1" value="0" onchange="validateButton3()" placeholder="Quantity" style="height: 40px;" oninput="this.className = ''" id="quantChooser"></p>
  </div>

  <br/>
  <div style="overflow:auto;">
    <div style="float:right;">
      <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
      <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
    </div>
  </div>
  <!-- Circles which indicates the steps of the form: -->
  <div style="text-align:center;margin-top:40px;">
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
  </div>
</form>
</div>
<script>

function isFutureDate(idate){
    if (idate.length == 0)
    return false;
    var today = new Date().getTime(),
        idate = idate.split("-");

    idate = new Date(idate[0], idate[1] - 1, idate[2]).getTime();
    return (today - idate) < 0;
}

function validateButton3() {
var result = (document.getElementById("quantChooser").value > 0);
if (result == false) {
    document.getElementById("quantChooser").className += "invalid";
    document.getElementsByName("doBtn")[currentTab].className = "undoneBtn";
} else {
    document.getElementsByName("doBtn")[currentTab].className = "doneBtn";
    document.getElementById("quantChooser").className="";
}
}

function validateButton2() {
var result = isFutureDate(document.getElementById("expirationChooser").value);
if (result == false) {
    document.getElementById("expirationChooser").className += "invalid";
    document.getElementsByName("doBtn")[currentTab].className = "undoneBtn";
} else {
    document.getElementsByName("doBtn")[currentTab].className = "doneBtn";
    document.getElementById("expirationChooser").className="";
}
}

function validateButton() {
    if (document.getElementsByName("lname")[0].value.length > 0) {
        document.getElementsByName("doBtn")[currentTab].className = "doneBtn";
        document.getElementById("fileLabel").innerHTML="Choose file";
        document.getElementsByName("filename")[0].value = "";
    } else if (document.getElementsByName("filename")[0].value.length > 0) {
        document.getElementsByName("doBtn")[currentTab].className = "doneBtn";
        document.getElementById("fileLabel").innerHTML=document.getElementsByName("filename")[0].files[0].name; 
        document.getElementsByName("lname")[0].value = "";
    } else {
        document.getElementsByName("doBtn")[currentTab].className = "undoneBtn";
    }
}

var currentTab = 0; // Current tab is set to be the first tab (0)
showTab(currentTab); // Display the current tab

function showTab(n) {
  // This function will display the specified tab of the form...
  var x = document.getElementsByClassName("tab");
  x[n].style.display = "block";
  //... and fix the Previous/Next buttons:
  if (n == 0) {
    document.getElementById("prevBtn").style.display = "none";
  } else {
    document.getElementById("prevBtn").style.display = "inline";
  }
  if (n == (x.length - 1)) {
    document.getElementById("nextBtn").innerHTML = "Submit";
  } else {
    document.getElementById("nextBtn").innerHTML = "Next";
  }
  //... and run a function that will display the correct step indicator:
  fixStepIndicator(n)
}

function nextPrev(n) {
  // This function will figure out which tab to display
  var x = document.getElementsByClassName("tab");
  // Exit the function if any field in the current tab is invalid:
  if (n == 1 && !validateForm()) return false;

  if (n == 1 && currentTab == 1 && !isFutureDate(document.getElementById("expirationChooser").value)){
        document.getElementById("expirationChooser").className = "invalid";
        return false;
  }

  if (n == 1 && currentTab == 2 && !(document.getElementById("quantChooser").value > 0)){
        document.getElementById("quantChooser").className = "invalid";
        return false;
  }
  
  // Hide the current tab:
  x[currentTab].style.display = "none";
  // Increase or decrease the current tab by 1:
  currentTab = currentTab + n;
  // if you have reached the end of the form...
  if (currentTab >= x.length) {
    // ... the form gets submitted:
    document.getElementById("regForm").submit();
    return false;
  }
  // Otherwise, display the correct tab:
  showTab(currentTab);
}

function validateForm() {
 var toRet= ((document.getElementsByName("lname")[0].value.length > 0) || (document.getElementsByName("filename")[0].value.length > 0));
 if (toRet == false) {
    document.getElementsByName("lname")[0].className += " invalid";
 }
 return toRet;
}

function fixStepIndicator(n) {
  // This function removes the "active" class of all steps...
  var i, x = document.getElementsByClassName("step");
  for (i = 0; i < x.length; i++) {
    x[i].className = x[i].className.replace(" active", "");
  }
  //... and adds the "active" class on the current step:
  x[n].className += " active";
}
</script>

